---
import '../styles/global.css';
import Header from '../components/Header.astro';

export interface Props {
  title: string;
  description?: string;
  maxWidth?: string;
}

const { title, description = "Computer Science Student and Web Developer", maxWidth = "max-w-3xl" } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="color-scheme" content="dark light" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <script is:inline>
      const THEME_STORAGE_KEY = 'theme';

      /**
       * This function is the single source of truth for applying the theme.
       * It updates the DOM and the button icons.
       */
      function applyTheme(theme) {
        // Apply theme to the <html> element
        const root = document.documentElement;
        root.setAttribute('data-theme', theme);
        root.classList.toggle('dark', theme === 'dark');

        // Update the button icons
        const sunIcon = document.getElementById('theme-icon-sun');
        const moonIcon = document.getElementById('theme-icon-moon');
        if (sunIcon && moonIcon) {
          sunIcon.style.display = theme === 'dark' ? 'none' : 'block';
          moonIcon.style.display = theme === 'dark' ? 'block' : 'none';
        }
      }

      /**
       * This function handles the theme toggle logic.
       */
      function toggleTheme() {
        const currentTheme = localStorage.getItem(THEME_STORAGE_KEY) || 'dark';
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        localStorage.setItem(THEME_STORAGE_KEY, newTheme);
        applyTheme(newTheme);
      }

      // 1. Set the initial theme immediately on page load to prevent flickering.
      // This is the most important part of the fix.
      const initialTheme = localStorage.getItem(THEME_STORAGE_KEY) || 'dark';
      applyTheme(initialTheme);

      // 2. Add the click event listener after the DOM has loaded.
      // This is the classic, reliable way to handle user interaction on a static site.
      document.addEventListener('DOMContentLoaded', () => {
        const button = document.getElementById('theme-toggle-button');
        if (button) {
          button.addEventListener('click', toggleTheme);
        }
      });
    </script>
  </head>
  <body class="min-h-screen bg-[var(--bg-primary)]">
    <!-- Floating centered navbar wrapper -->
    <div class="fixed top-8 left-1/2 -translate-x-1/2 z-50">
      <div class="min-w-fit max-w-xl h-11 rounded-lg bg-[var(--bg-secondary)]/95 border border-[var(--border-color)]/50 shadow-md backdrop-blur px-2 md:px-4 flex items-center">
        <Header />
      </div>
    </div>

    <!-- Main Content -->
    <main class="flex flex-col min-h-full px-4 pt-32 pb-6">
      <div class:list={[maxWidth, "w-full", "mx-auto"]}>
        <slot />
      </div>
    </main>
  </body>
</html>
